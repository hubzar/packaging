name: Build, Test and Publish

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Set up Python 3.8
        uses: actions/setup-python@v5.0.0
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          /bin/bash -x run.sh install
      - name: Linting
        run: |
          /bin/bash -x run.sh clean
      - name: Build Python package
        run: |
          /bin/bash -x run.sh build
      # - name: Publish to Test PyPi
      #   run: |
      #     /bin/bash -x run.sh publish:test
      #   env:
      #     TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}

      # - name: Analysing the code with pre-commit
      #   run: |
      #     SKIP=no-commit-to-branch pre-commit run --all-files

  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump secrets context
        env:
          SECRET_CONTEXT: ${{ toJson(secrets) }}
        run: echo "$SECRET_CONTEXT"
      - name: Dump vars context
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}
        run: echo "$VARS_CONTEXT"
